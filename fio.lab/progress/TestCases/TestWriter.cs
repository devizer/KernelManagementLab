using System;
using System.Collections.Generic;
using System.Text;

namespace TestCases
{
    class TestWriter
    {
        private static string CsBegin = @"
namespace AutoGeneratedTests {

  public partial class FioParserTestCase {

    public string Version;
    public string[] SeqRead, SeqWrite, RandRead, RandWrite;

    public static FioParserTestCase[] All = new FioParserTestCase[] {
{Placeholder}
    };
  }
}
";

        public static string GenerateFull(IEnumerable<string> versions)
        {
            return CsBegin.Replace("{Placeholder}", string.Join(Environment.NewLine, versions));
        }

        public static string Generate1(string version, List<List<string>> sections)
        {
            StringBuilder ret = new StringBuilder();
            ret.AppendLine($@"
      new FioParserTestCase() {{
        Version = ""{version}"",");

            string[] names = new[] {"SeqRead", "SeqWrite", "RandRead", "RandWrite"};
            for (int i = 0; i < 4; i++)
            {
                var section = sections[i + 2];
                ret.AppendLine(@$"
        {names[i]} = new string[] {{ /* " + version + " */");
                foreach (var line in section)
                {
                    ret.AppendLine(@$"          ""{line}"", /* {version} */");
                }

                ret.AppendLine("        },");
            }

            ret.AppendLine("      }, /* " + version + "*/");

            return ret.ToString();
        }
    }
}
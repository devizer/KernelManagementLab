pr: none

trigger:
- manual

pool:
  vmImage: 'ubuntu-20.04'
  
jobs:
- job: publish_w3top
  timeoutInMinutes: 100

  steps:

  - bash: |
      script=https://raw.githubusercontent.com/devizer/test-and-build/master/install-build-tools-bundle.sh; (wget -q -nv --no-check-certificate -O - $script 2>/dev/null || curl -ksSL $script) | bash >/dev/null
      Say --Reset-Stopwatch
      Say "CPU: $(Get-CpuName)"
      # LOOP | BLOCK
      export SECOND_DISK_MODE=LOOP
      export RESET_FOLDERS_TO_RAID="/var/lib/apt;/transient-builds;/var/cache/apt;$SYSTEM_ARTIFACTSDIRECTORY;/tmp;/var/tmp;$HOME/.local/share/NuGet;$HOME/.nuget"
      export LOOP_DIRECT_IO=off
      export MOVE_DOCKER_TO_RAID=True
      export FS=BTRFS-Compressed
      url=https://raw.githubusercontent.com/devizer/glist/master/Raid0-on-Azure-Pipelines-Linux.sh; (wget -q -nv --no-check-certificate -O - $url 2>/dev/null || curl -ksSL $url) | bash

      sleep 2
      sudo chown -R $USER $HOME/.local/share/NuGet
      sudo chown -R $USER $HOME/.nuget
      df -h -T
    condition: succeededOrFailed()
    displayName: 'Install Raid-0'

  - script: |
      set -eu;
      script=https://raw.githubusercontent.com/devizer/test-and-build/master/install-build-tools-bundle.sh; (wget -q -nv --no-check-certificate -O - $script 2>/dev/null || curl -ksSL $script) | bash >/dev/null
      Say --Reset-Stopwatch
      Say "apt"
      sudo apt-get update -qq;
      sudo apt-get install sshpass rsync openjdk-11-jdk tree git ruby-dev p7zip-full pv jq -y -qq | { grep "Setting\|Unpack" || true; }
      Say "dpl"
      sudo gem install dpl dpl-releases
      Say "/transient-builds"
      sudo mkdir -p /transient-builds
      sudo chown -R $(whoami) /transient-builds
      Say "Node"
      script=https://raw.githubusercontent.com/devizer/glist/master/install-dotnet-and-nodejs.sh; (wget -q -nv --no-check-certificate -O - $script 2>/dev/null || curl -ksSL $script) | bash -s node
      Say "push token"
      mkdir -p ~/.ssh; cd ~/.ssh
      urll="https://master.dl.sourceforge.net/project/fio/build-matrix/build-server.fingerprint?viasf=1"
      curl -kSL -o build-server.fingerprint "$urll"
      7z x -p${GITHUB_PUSH_TOKEN} -t7z -y build-server.fingerprint
      Say "Provisioning completed"
    displayName: 'Provisioning'
    env:
      GITHUB_PUSH_TOKEN: $(SECRET_ID1)
  
  - script: |
      set -eu;
      git config --global user.email "devizer@github.io"
      git config --global user.name "devizer"
      export GITHUB_RELEASE_TOKEN;
      bash -eu publish-public.sh

      Say "Deploying sf.net release"
      mkdir -p ~/.ssh; printf "Host *\n   StrictHostKeyChecking no\n   UserKnownHostsFile=/dev/null" >> ~/.ssh/config
      sshpass -p "${SF_TOKEN}" rsync -r /transient-builds/w3top-new-version-for-sf/. archivarius@frs.sourceforge.net:/home/frs/p/w3top/

      Say "Publish complete"
    displayName: 'Publish W3Top'
    env:
      GITHUB_RELEASE_TOKEN: $(SECRET_ID2)
      SF_TOKEN: $(SECRET_ID3)

  - script: |
      set -eu;
      Say "Pack /transient-builds"
      7z a -mx=3  -ms=on -mqs=on $SYSTEM_ARTIFACTSDIRECTORY/transient-builds.7z /transient-builds
      Say "Pack ${BUILD_SOURCESDIRECTORY}"
      7z a -mx=3 -ms=on -mqs=on $SYSTEM_ARTIFACTSDIRECTORY/Sources-Directory.7z ${BUILD_SOURCESDIRECTORY}
      ls -la $SYSTEM_ARTIFACTSDIRECTORY
    displayName: 'Pack Artifacts'
    env:
      GITHUB_RELEASE_TOKEN: $(SECRET_ID2)
      SF_TOKEN: $(SECRET_ID3)

  - task: PublishBuildArtifacts@1
    condition: succeededOrFailed()
    displayName: 'Drop Transient Builds'
    inputs:
      pathtoPublish: '$(System.ARTIFACTSDIRECTORY)'
      artifactName: '$(Agent.JobName)'
